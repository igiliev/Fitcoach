{
  "_comment": "!!! THIS IS AN AUTOMATICALLY GENERATED FILE - DO NOT EDIT !!!",
  "name": "divi/counters",
  "d4Shortcode": "et_pb_counters",
  "title": "Bar Counters",
  "titles": "Bar Counters",
  "moduleIcon": "divi/module-bar-counters",
  "childModuleName": "divi/counter",
  "childModuleTitle": "Bar Counter",
  "category": "module",
  "childrenName": [
    "divi/counter"
  ],
  "videos": [
    {
      "id": "gn11R_zitEw",
      "name": "An introduction to the Bar Counter module"
    },
    {
      "id": "1iqjhnHVA9Y",
      "name": "Design Settings and Advanced Module Settings"
    },
    {
      "id": "boNZZ0MYU0E",
      "name": "Saving and loading from the library"
    }
  ],
  "attributes": {
    "module": {
      "type": "object",
      "selector": "{{selector}}",
      "settings": {
        "meta": {
          "adminLabel": {}
        },
        "advanced": {
          "link": {},
          "loop": {},
          "htmlAttributes": {},
          "text": {}
        },
        "decoration": {
          "animation": {},
          "conditions": {},
          "disabledOn": {},
          "filters": {},
          "overflow": {},
          "order": {},
          "position": {},
          "scroll": {
            "groupType": "group-item",
            "item": {
              "priority": 20,
              "render": true,
              "groupSlug": "advancedScrollModule",
              "component": {
                "name": "divi/scroll",
                "type": "group",
                "props": {
                  "grouped": false,
                  "fields": {
                    "gridMotion": {
                      "render": true
                    }
                  }
                }
              }
            }
          },
          "sizing": {},
          "spacing": {},
          "sticky": {},
          "transform": {},
          "transition": {},
          "zIndex": {}
        }
      },
      "styleProps": {
        "spacing": {
          "selector": "{{selector}}.et_pb_counters",
          "propertySelectors": {
            "desktop": {
              "value": {
                "padding": "{{selector}} .et_pb_counter_amount"
              }
            }
          },
          "important": {
            "desktop": {
              "value": {
                "margin": true
              }
            }
          }
        },
        "sizing": {
          "propertySelectors": {
            "desktop": {
              "value": {
                "margin-left": "{{selector}}.et_pb_module",
                "margin-right": "{{selector}}.et_pb_module"
              }
            }
          },
          "important": {
            "desktop": {
              "value": {
                "margin-left": true,
                "margin-right": true
              }
            }
          }
        }
      }
    },
    "barCounter": {
      "type": "object",
      "selector": "{{selector}} .et_pb_counter_container",
      "settings": {
        "decoration": {
          "background": {},
          "border": {},
          "boxShadow": {}
        }
      },
      "styleProps": {
        "background": {
          "selector": "{{selector}}.et_pb_counters .et_pb_counter_container"
        },
        "border": {
          "selector": "{{selector}} .et_pb_counter_container",
          "propertySelectors": {
            "desktop": {
              "value": {
                "border-radius": "{{selector}} .et_pb_counter_container, {{selector}} .et_pb_counter_amount"
              }
            }
          }
        }
      }
    },
    "title": {
      "type": "object",
      "selector": "{{selector}}.et_pb_counters .et_pb_counter_title",
      "settings": {
        "decoration": {
          "font": {
            "component": {
              "props": {
                "fieldLabel": "Title",
                "groupLabel": "Title Text",
                "fields": {
                  "headingLevel": {
                    "render": false
                  }
                }
              }
            }
          }
        }
      },
      "attributes": {
        "class": "et_pb_module_header"
      },
      "styleProps": {
        "font": {
          "important": {
            "font": {
              "desktop": {
                "value": {
                  "color": true
                }
              }
            }
          }
        }
      },
      "inlineEditor": "plainText",
      "tagName": "span",
      "childrenSanitizer": "et_core_esc_previously"
    },
    "barProgress": {
      "type": "object",
      "selector": "{{selector}}.et_pb_counters .et_pb_counter_amount_number",
      "settings": {
        "decoration": {
          "font": {
            "component": {
              "props": {
                "fieldLabel": "Percentage",
                "groupLabel": "Percentage Text"
              }
            }
          }
        },
        "advanced": {
          "usePercentages": {
            "panel": "content",
            "priority": 10,
            "groupName": "element",
            "groupType": "group",
            "component": {
              "name": "divi/composite",
              "props": {
                "groupLabel": "Elements",
                "fields": {
                  "usePercentages": {
                    "attrName": "barProgress.advanced.usePercentages",
                    "label": "Show Percentage",
                    "description": "Turning off percentages will remove the percentage text from within the filled portion of the bar.",
                    "features": {
                      "sticky": false,
                      "preset": [
                        "html"
                      ]
                    },
                    "render": true,
                    "component": {
                      "type": "field",
                      "name": "divi/toggle",
                      "props": {
                        "options": {
                          "off": "Off",
                          "on": "On"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "styleProps": {
        "font": {
          "important": {
            "font": {
              "desktop": {
                "value": {
                  "color": true
                }
              }
            }
          }
        }
      }
    },
    "children": {
      "type": "object",
      "settings": {
        "decoration": {
          "background": {
            "panel": "design",
            "priority": 5,
            "groupName": "background",
            "groupType": "group",
            "component": {
              "name": "divi/composite",
              "props": {
                "groupLabel": "Bar",
                "clipboardCategory": "style",
                "fields": {
                  "color": {
                    "attrName": "children.barProgress.decoration.background",
                    "subName": "color",
                    "label": "Bar Background Color",
                    "description": "This will change the fill color for the bar.",
                    "groupName": "divi/background",
                    "priority": 10,
                    "render": true,
                    "component": {
                      "type": "field",
                      "name": "divi/color-picker",
                      "props": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "customCssFields": {
    "counterTitle": {
      "label": "Counter Title",
      "subName": "counterTitle",
      "selectorSuffix": " .et_pb_counter_title"
    },
    "counterContainer": {
      "label": "Counter Container",
      "subName": "counterContainer",
      "selectorSuffix": " .et_pb_counter_container"
    },
    "counterAmount": {
      "label": "Counter Amount",
      "subName": "counterAmount",
      "selectorSuffix": " .et_pb_counter_amount"
    }
  },
  "settings": {
    "content": "auto",
    "design": "auto",
    "advanced": "auto"
  },
  "mousetrap": {
    "inner": {
      "edited": true
    },
    "zIndex": {
      "edited": "hasInlineTextOnEdit"
    }
  }
}